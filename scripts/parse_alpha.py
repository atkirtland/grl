import argparse
import numpy as np
from pathlib import Path

from grl.environment.pomdp_file import POMDPFile
"""
In this file we parse .alpha files generated by the program pomdp-solver from pomdp.org
"""
if __name__ == '__main__':
    parser = argparse.ArgumentParser()
    parser.add_argument('filename', type=str,
                        help='name of .alpha file to parse')

    args = parser.parse_args()
    filename = Path(args.filename)

    actions = []
    coeffs = []

    with open(filename, 'r') as f:
        for line in f.readlines():
            stripped = line.strip()
            if not line.isspace() or stripped:
                try:
                    # this means we have an action
                    action = int(stripped)
                    actions.append(action)
                except ValueError:
                    # this means we're at a list of coefficients
                    str_coeff = stripped.split(' ')
                    coeff = [float(c) for c in str_coeff]
                    coeffs.append(coeff)

    actions = np.array(actions)
    coeffs = np.array(coeffs)

    pomdp_name = '-'.join(filename.stem.split('-')[:-1])
    pomdp = POMDPFile(filename.parent / f"{pomdp_name}.POMDP")
    p0 = pomdp.start

    max_start_val = -float('inf')
    max_start_idx = 0
    for i, coeff in enumerate(coeffs):
        piece_start_val = np.dot(coeff, p0)
        if piece_start_val > max_start_val:
            max_start_val = piece_start_val
            max_start_idx = i

    res = {'p0': p0, 'actions': actions, 'coeffs': coeffs, 'max_start_idx': max_start_idx}

    res_file = filename.parent / f"{pomdp_name}-pomdp-solver-results.npy"

    print(f"Maximum start val for pomdp soln.: {max_start_val}")
    print(f"Saving results to {res_file}")

    np.save(res_file, res)



